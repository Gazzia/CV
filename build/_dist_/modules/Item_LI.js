import './Item_LI.css.proxy.js';
/* src\modules\Item_LI.svelte generated by Svelte v3.29.4 */
import {
	SvelteComponent,
	append,
	attr,
	detach,
	element,
	empty,
	init,
	insert,
	noop,
	safe_not_equal,
	set_data,
	space,
	text as text_1
} from "../../web_modules/svelte/internal.js";

function create_else_block(ctx) {
	let dd;
	let div0;
	let t0;
	let t1;
	let div1;
	let t2;

	return {
		c() {
			dd = element("dd");
			div0 = element("div");
			t0 = text_1(/*text*/ ctx[0]);
			t1 = space();
			div1 = element("div");
			t2 = text_1(/*otherData*/ ctx[1]);
			attr(div0, "class", "text");
			attr(div1, "class", "other svelte-1ilgyem");
			attr(dd, "class", "double svelte-1ilgyem");
		},
		m(target, anchor) {
			insert(target, dd, anchor);
			append(dd, div0);
			append(div0, t0);
			append(dd, t1);
			append(dd, div1);
			append(div1, t2);
		},
		p(ctx, dirty) {
			if (dirty & /*text*/ 1) set_data(t0, /*text*/ ctx[0]);
			if (dirty & /*otherData*/ 2) set_data(t2, /*otherData*/ ctx[1]);
		},
		d(detaching) {
			if (detaching) detach(dd);
		}
	};
}

// (22:0) {#if !otherData}
function create_if_block(ctx) {
	let dd;
	let t;

	return {
		c() {
			dd = element("dd");
			t = text_1(/*text*/ ctx[0]);
			attr(dd, "class", "svelte-1ilgyem");
		},
		m(target, anchor) {
			insert(target, dd, anchor);
			append(dd, t);
		},
		p(ctx, dirty) {
			if (dirty & /*text*/ 1) set_data(t, /*text*/ ctx[0]);
		},
		d(detaching) {
			if (detaching) detach(dd);
		}
	};
}

function create_fragment(ctx) {
	let if_block_anchor;

	function select_block_type(ctx, dirty) {
		if (!/*otherData*/ ctx[1]) return create_if_block;
		return create_else_block;
	}

	let current_block_type = select_block_type(ctx, -1);
	let if_block = current_block_type(ctx);

	return {
		c() {
			if_block.c();
			if_block_anchor = empty();
		},
		m(target, anchor) {
			if_block.m(target, anchor);
			insert(target, if_block_anchor, anchor);
		},
		p(ctx, [dirty]) {
			if (current_block_type === (current_block_type = select_block_type(ctx, dirty)) && if_block) {
				if_block.p(ctx, dirty);
			} else {
				if_block.d(1);
				if_block = current_block_type(ctx);

				if (if_block) {
					if_block.c();
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			}
		},
		i: noop,
		o: noop,
		d(detaching) {
			if_block.d(detaching);
			if (detaching) detach(if_block_anchor);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { text = "" } = $$props;
	let { otherData = false } = $$props;

	$$self.$$set = $$props => {
		if ("text" in $$props) $$invalidate(0, text = $$props.text);
		if ("otherData" in $$props) $$invalidate(1, otherData = $$props.otherData);
	};

	return [text, otherData];
}

class Item_LI extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { text: 0, otherData: 1 });
	}
}

export default Item_LI;